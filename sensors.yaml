# Weather prediction
#  - platform: yr

  - platform: mqtt
    name: "SPA"
    state_topic: "tele/garden/SENSOR"
    value_template: "{{ ((value_json.DS18x20.DS1.Temperature | float + 1.6)) | round(1) }}"
    unit_of_measurement: "°C"

  - platform: mqtt
    name: "Julgran"
    state_topic: "waterlevel/level"
    value_template: "{{  value | round(1) }}"
    unit_of_measurement: "mm"

  - platform: mqtt
    name: "Fas 1"
    state_topic: "housePower/phase_1"
    value_template: "{{  value | round(1) }}"
    unit_of_measurement: 'A'

  - platform: mqtt
    name: "Fas 2"
    state_topic: "housePower/phase_2"
    value_template: "{{  value | round(1) }}"
    unit_of_measurement: 'A'

  - platform: mqtt
    name: "Fas 3"
    state_topic: "housePower/phase_3"
    value_template: "{{  value | round(1) }}"
    unit_of_measurement: 'A'

  - platform: template
    sensors:
      sunrise:
        friendly_name: "Soluppgång"
        value_template: "{{as_timestamp(states.sensor.dark_sky_sunset_0d.state) | timestamp_custom('%X')}}"
#        value_template: "{{strptime(states.sensor.dark_sky_sunrise_0d.state,'%Y-%m-%d %H:%M:%S') | timestamp_custom('%X')}}"
      sunset:
        friendly_name: "Solnedgång"
        value_template: "{{as_timestamp(states.sensor.dark_sky_sunset_0d.state) | timestamp_local('%X')}}"

  - platform: template
    sensors:
      dishw_status:
        friendly_name: "Diskmaskin"
        value_template: >-
          {%if states("sensor.diskmaskin_strom") | float > 2 %}
              Warming
          {%elif states("sensor.diskmaskin_strom") | float > 0.2 %}
              Running
          {%elif states("sensor.diskmaskin_strom") | float > 0 %}
              Drying
          {%else %}
              Ready
          {%- endif %}
      spa_temp:
        friendly_name: "SPA temp"
        value_template: >-
          {%if states("sensor.spa") | float >= 30 and states("sensor.spa") | float <= 40 %}
              OK
          {%elif states("sensor.spa") | float < 30 %}
              Too Cold
          {%elif states("sensor.spa") | float > 40 %}
              Too Hot
          {%- endif %}
      fas_1_status:
        friendly_name: "Fas 1 status"
        value_template: >-
          {%if states("sensor.fas_1") | float >= 0 and states("sensor.fas_1") | float <= 10 %}
              OK
          {%elif states("sensor.fas_1") | float > 20 %}
              Too High
          {%elif states("sensor.fas_1") | float > 10 %}
              High
          {%else %}
              ERROR
          {%- endif %}
      fas_2_status:
        friendly_name: "Fas 2 status"
        value_template: >-
          {%if states("sensor.fas_2") | float >= 0 and states("sensor.fas_2") | float <= 10 %}
              OK
          {%elif states("sensor.fas_2") | float > 20 %}
              Too High
          {%elif states("sensor.fas_2") | float > 10 %}
              High
          {%else %}
              ERROR
          {%- endif %}
      fas_3_status:
        friendly_name: "Fas 3 status"
        value_template: >-
          {%if states("sensor.fas_3") | float >= 0 and states("sensor.fas_3") | float <= 10 %}
              OK
          {%elif states("sensor.fas_3") | float > 20 %}
              Too High
          {%elif states("sensor.fas_3") | float > 10 %}
              High
          {%else %}
              ERROR
          {%- endif %}

  - platform: mqtt
    name: "Effekt 1"
    state_topic: "powermeter/power1"
    unit_of_measurement: 'W'

  - platform: mqtt
    name: "Effekt 2"
    state_topic: "powermeter/power2"
    unit_of_measurement: 'W'

  - platform: mqtt
    name: "Effekt 3"
    state_topic: "powermeter/power3"
    unit_of_measurement: 'W'

  - platform: mqtt
    name: "Förbrukning idag"
    state_topic: "housePower/status"
    value_template: "{{ value_json.ENERGY.Total }}"
    unit_of_measurement: "Wh"

#  - platform: mqtt  
#    state_topic: "powerconsumption/house/today"
#    name: 'Förbrukning idag'
#    value_template: "{{  value | round(0) }}"
#    unit_of_measurement: 'kwh'
#  - platform: mqtt  
#    state_topic: "powerconsumption/house/wtd"
#    name: 'Veckoförbrukning'
#    value_template: "{{  value | round(0) }}"
#    unit_of_measurement: 'kwh'
#  - platform: mqtt  
#    state_topic: "powerconsumption/house/mtd"
#    name: 'Månadsförbrukning'
#    value_template: "{{  value | round(0) }}"
#    unit_of_measurement: 'kwh'
#  - platform: mqtt  
#    state_topic: "powerconsumption/house/ytd"
#    name: 'Årsförbrukning'
#    value_template: "{{  value | round(0) }}"
#    unit_of_measurement: 'kwh'

  - platform: mqtt
    name: "NodeIT temp"
    state_topic: "nodeit/status/temp1"
    unit_of_measurement: '°C'

  - platform: mqtt
    name: "Ute temp"
    state_topic: "nodeit/status/temp2"
    unit_of_measurement: '°C'

  - platform: mqtt
    name: "Annex temp"
    state_topic: "nodeit/status/temp3"
    unit_of_measurement: '°C'

  - platform: mqtt
    name: "Ute tryck"
    state_topic: "nodeit/status/pressure"
    unit_of_measurement: 'hPa'

  - platform: mqtt
    name: "Annex humid"
    state_topic: "nodeit/status/humidity"
    unit_of_measurement: '%'

  - platform: mqtt
    name: "Annex ljus"
    state_topic: "nodeit/status/light"
    unit_of_measurement: 'lux'

  - platform: mqtt
    name: "Garaget"
    state_topic: "temp/garage"
    unit_of_measurement: '°C'

  - platform: mqtt
    name: "Vinkällaren"
    state_topic: "temp/vin"
    value_template: "{{  value | round(1) }}"
    unit_of_measurement: '°C'

  - platform: mqtt
    name: "Vinkylen"
    state_topic: "tele/the_bar/SENSOR"
    value_template: "{{ value_json.DS18x20.DS1.Temperature }}"
    unit_of_measurement: "°C"

  - platform: mqtt
    name: "Garageport norr"
    state_topic: "fromGarage/status"

  - platform: mqtt
    name: "Uterum temp"
    state_topic: "tele/outroom/SENSOR"
    value_template: "{{ value_json.AM2301.Temperature }}"
    unit_of_measurement: "°C"

  - platform: mqtt
    name: "Temp1"
    state_topic: "tele/tempsens/SENSOR"
    value_template: "{{ value_json.DS18x20.DS1.Temperature }}"
    unit_of_measurement: "°C"

  - platform: mqtt
    name: "Temp2"
    state_topic: "tele/tempsens/SENSOR"
    value_template: "{{ value_json.DS18x20.DS2.Temperature }}"
    unit_of_measurement: "°C"

  - platform: mqtt
    name: "Temp3"
    state_topic: "tele/tempsens2/SENSOR"
    value_template: "{{ value_json.DS18x20.DS1.Temperature }}"
    unit_of_measurement: "°C"

  - platform: mqtt
    name: "Temp4"
    state_topic: "tele/tempsens2/SENSOR"
    value_template: "{{ value_json.DS18x20.DS2.Temperature }}"
    unit_of_measurement: "°C"

  - platform: uptime
    name: Online
    unit_of_measurement: hours

  - platform: history_stats
    name: Citrus belysningen
    entity_id: light.citrusbelysning
    state: 'on'
    type: time
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'

  - platform: darksky
    api_key: !secret darksky_api
    language: sv
    scan_interval: "00:30"
    monitored_conditions:
      - summary
      - icon
      - temperature
      - humidity
      - precip_probability

  - platform: template
    sensors:
      phone_battery:
        friendly_name: 'Telefon batteri'
        value_template: '{{ states.device_tracker.bh9000mba2.attributes.battery | round(0) }}'
        unit_of_measurement: "%"
        entity_id:
         - device_tracker.bh9000mba2
      phone_altitude:
        friendly_name: 'Telefon altitud'
        value_template: '{{ states.device_tracker.bh9000mba2.attributes.altitude | round(0) }}'
        unit_of_measurement: "m"
        entity_id:
         - device_tracker.bh9000mba2

#
# Diskmaskinen
#
  - platform: mqtt
    name: "Diskmaskin idag"
    state_topic: "tele/dishwasher/SENSOR"
    value_template: '{{ value_json.ENERGY.Today }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "Diskmaskin igår"
    state_topic: "tele/dishwasher/SENSOR"
    value_template: '{{ value_json.ENERGY.Yesterday }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "Diskmaskin totalt"
    state_topic: "tele/dishwasher/SENSOR"
    value_template: '{{ value_json.ENERGY.Total | round(1) }}'
    unit_of_measurement: "kWh"

  - platform: mqtt
    name: "Diskmaskin effekt"
    state_topic: "tele/dishwasher/SENSOR"
    value_template: '{{ value_json.ENERGY.Power }}'
    unit_of_measurement: "W"
  - platform: mqtt
    name: "Diskmaskin spänning"
    state_topic: "tele/dishwasher/SENSOR"
    value_template: '{{ value_json.ENERGY.Voltage }}'
    unit_of_measurement: "V"
  - platform: mqtt
    name: "Diskmaskin ström"
    state_topic: "tele/dishwasher/SENSOR"
    value_template: '{{ value_json.ENERGY.Current }}'
    unit_of_measurement: "A"

  - platform: template
    sensors:
      dishwasher_status:
        value_template: '{{ states.input_select.dishwasher_status.state}}'
        friendly_name: 'Diskmaskin Status'

#
# Elementen i annext
#
  - platform: mqtt
    name: "Effekt idag"
    state_topic: "tele/annexet/SENSOR"
    value_template: '{{ value_json.ENERGY.Today }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "Effekt igår"
    state_topic: "tele/annexet/SENSOR"
    value_template: '{{ value_json.ENERGY.Yesterday }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "Effekt totalt"
    state_topic: "tele/annexet/SENSOR"
    value_template: '{{ value_json.ENERGY.Total | round(1) }}'
    unit_of_measurement: "kWh"

  - platform: mqtt
    name: "Effekt nu"
    state_topic: "tele/annexet/SENSOR"
    value_template: '{{ value_json.ENERGY.Power }}'
    unit_of_measurement: "W"
  - platform: mqtt
    name: "Element spänning"
    state_topic: "tele/annexet/SENSOR"
    value_template: '{{ value_json.ENERGY.Voltage }}'
    unit_of_measurement: "V"
  - platform: mqtt
    name: "Element ström"
    state_topic: "tele/annexet/SENSOR"
    value_template: '{{ value_json.ENERGY.Current }}'
    unit_of_measurement: "A"

#
# Garageporten
#
  - platform: template
    sensors:
      garage_door_state:
        value_template: >- 
          {% if is_state('binary_sensor.garageport_norr', 'open') %}
            Öppen
          {% else %}
            Stängd
          {% endif %}
        icon_template: >-
          {% if is_state('binary_sensor.garageport_norr', 'open') %}
            mdi:garage-open
          {% else %}
            mdi:garage
          {% endif %}
        friendly_name: 'Garageport'

  - platform: rflink
    automatic_add: true
    devices:
      tunex_e901_temp:
        sensor_type: temperature
      tunex_e901_bat:
        sensor_type: battery
      tunex_e901_hum:
        sensor_type: humidity
      tunex_b702_temp:
        sensor_type: temperature
      tunex_b702_bat:
        sensor_type: battery
      tunex_b702_hum:
        sensor_type: humidity
      xiron_7202_temp:
        sensor_type: temperature
      xiron_7202_bat:
        sensor_type: battery
      xiron_7202_hum:
        sensor_type: humidity
      oregontemp_3821_temp:
        sensor_type: temperature
      oregontemp_3821_bat:
        sensor_type: battery

#
# Tempsensorn i matkällaren
#
#  - platform: mqtt
#    name: "Matkällaren"
#    state_topic: "rflink/Xiron-3702"
#    value_template: "{{ value_json.TEMP}}"
#    unit_of_measurement: "°C"

#  - platform: mqtt
#    name: "Matkällaren hum"
#    state_topic: "rflink/Xiron-3702"
#    value_template: "{{ value_json.HUM}}"
#    unit_of_measurement: "%"

#
# Tempsensorn i uterummet
#
#  - platform: mqtt
#    name: "Uterum"
#    state_topic: "rflink/Xiron-7202"
#    value_template: "{{ value_json.TEMP}}"
#    unit_of_measurement: "°C"

#  - platform: mqtt
#    name: "Uterum hum"
#    state_topic: "rflink/Xiron-7202"
#    value_template: "{{ value_json.HUM}}"
#    unit_of_measurement: "%"


#
# Tempsensorn utanför entré-dörren
#
#  - platform: mqtt
#    name: "Entrédörr"
#    state_topic: "rflink/Tunex-E901"
#    value_template: "{{ value_json.TEMP}}"
#    unit_of_measurement: "°C"

#  - platform: mqtt
#    name: "Entrédörr hum"
#    state_topic: "rflink/Tunex-E901"
#    value_template: "{{ value_json.HUM}}"
#    unit_of_measurement: "%"

# Tasmota Firmware
# Getting Firmware from JSON for Tasmota
  - platform: rest
    resource: https://api.github.com/repos/arendst/Sonoff-Tasmota/releases/latest
    name: Sonoff Firmware Version Available
    username: !secret githubuser
    password: !secret githubpass
    authentication: basic
    value_template: '{{ value_json.tag_name }}'
    headers:
      Accept: application/vnd.github.v3+json
      Content-Type: application/json
      User-Agent: Home Assistant REST sensor
  - platform: mqtt
    name: "Sonoff 1 Firmware"
    state_topic: "sonoff1/stat/STATUS2"
    value_template: 'v{{ value_json.StatusFWR.Version }}'
  - platform: mqtt
    name: "Sonoff 5 Firmware"
    state_topic: "sonoff5/stat/STATUS2"
    value_template: 'v{{ value_json.StatusFWR.Version }}'
