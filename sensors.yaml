# Weather prediction
  - platform: yr

  - platform: mqtt
    name: "SPA"
    state_topic: "tele/garden/SENSOR"
    value_template: "{{ ((value_json.DS18x20.DS1.Temperature | float + 1.6)) | round(1) }}"
#    state_topic: "temp/spa"
#    value_template: "{{  value | round(1) }}"
    unit_of_measurement: "°C"


#  - platform: template
#    sensors:
#      spa_offset:
#      entity_id:
#      - sensor.spa
#      unit_of_measurement: '°C'
#      value_template: >
#        {{ ((float(states(‘sensor.spa’)) - 30) * 2) | round(1) }}

  - platform: mqtt
    name: "Fas 1"
    state_topic: "powermeter/phase1"
    value_template: "{{  value | round(1) }}"
    unit_of_measurement: 'A'

  - platform: mqtt
    name: "Fas 2"
    state_topic: "powermeter/phase2"
    value_template: "{{  value | round(1) }}"
    unit_of_measurement: 'A'

  - platform: mqtt
    name: "Fas 3"
    state_topic: "powermeter/phase3"
    value_template: "{{  value | round(1) }}"
    unit_of_measurement: 'A'

  - platform: template
    sensors:
      dishw_status:
        value_template: >-
          {%if states("sensor.diskmaskin_strom") | float > 2 %}
              Warming
          {%elif states("sensor.diskmaskin_strom") | float > 0.2 %}
              Running
          {%elif states("sensor.diskmaskin_strom") | float > 0 %}
              Drying
          {%else %}
              Ready
          {%- endif %}
      spa_temp:
        value_template: >-
          {%if states("sensor.spa") | float >= 30 and states("sensor.spa") | float <= 38 %}
              OK
          {%elif states("sensor.spa") | float < 30 %}
              Too Cold
          {%elif states("sensor.spa") | float > 38 %}
              Too Hot
          {%- endif %}
      fas_1_status:
        value_template: >-
          {%if states("sensor.fas_1") | float >= 0 and states("sensor.fas_1") | float <= 10 %}
              OK
          {%elif states("sensor.fas_1") | float > 20 %}
              Too High
          {%elif states("sensor.fas_1") | float > 10 %}
              High
          {%elif states("sensor.fas_1") | float < 0 %}
              ERROR
          {%- endif %}
      fas_2_status:
        value_template: >-
          {%if states("sensor.fas_2") | float >= 0 and states("sensor.fas_2") | float <= 10 %}
              OK
          {%elif states("sensor.fas_2") | float > 20 %}
              Too High
          {%elif states("sensor.fas_2") | float > 10 %}
              High
          {%elif states("sensor.fas_2") | float < 0 %}
              ERROR
          {%- endif %}
      fas_3_status:
        value_template: >-
          {%if states("sensor.fas_3") | float >= 0 and states("sensor.fas_3") | float <= 10 %}
              OK
          {%elif states("sensor.fas_3") | float > 20 %}
              Too High
          {%elif states("sensor.fas_3") | float > 10 %}
              High
          {%elif states("sensor.fas_3") | float < 0 %}
              ERROR
          {%- endif %}

  - platform: mqtt
    name: "Effekt 1"
    state_topic: "powermeter/power1"
    unit_of_measurement: 'W'

  - platform: mqtt
    name: "Effekt 2"
    state_topic: "powermeter/power2"
    unit_of_measurement: 'W'

  - platform: mqtt
    name: "Effekt 3"
    state_topic: "powermeter/power3"
    unit_of_measurement: 'W'

  - platform: template
    sensors:
      phone_battery:
        friendly_name: 'Telefon batteri'
        value_template: '{{ states.device_tracker.bh9000mba2.attributes.battery | round(0) }}'
        unit_of_measurement: "%"
        entity_id:
         - device_tracker.bh9000mba2


  - platform: mqtt  
    state_topic: "powerconsumption/house/today"
    name: 'idag kwh'  
    unit_of_measurement: 'kwh'
  - platform: mqtt  
    state_topic: "powerconsumption/house/wtd"
    name: 'vecka kwh'  
    unit_of_measurement: 'kwh'
  - platform: mqtt  
    state_topic: "powerconsumption/house/mtd"
    name: 'månad kwh'  
    unit_of_measurement: 'kwh'
  - platform: mqtt  
    state_topic: "powerconsumption/house/ytd"
    name: 'år kwh'  
    unit_of_measurement: 'kwh'

  - platform: mqtt
    name: "NodeIT temp"
    state_topic: "nodeit/status/temp1"
    unit_of_measurement: '°C'

  - platform: mqtt
    name: "Ute temp"
    state_topic: "nodeit/status/temp2"
    unit_of_measurement: '°C'

  - platform: mqtt
    name: "Annex temp"
    state_topic: "nodeit/status/temp3"
    unit_of_measurement: '°C'

  - platform: mqtt
    name: "Ute tryck"
    state_topic: "nodeit/status/pressure"
    unit_of_measurement: 'hPa'

  - platform: mqtt
    name: "Annex humid"
    state_topic: "nodeit/status/humidity"
    unit_of_measurement: '%'

  - platform: mqtt
    name: "Annex ljus"
    state_topic: "nodeit/status/light"
    unit_of_measurement: 'lux'

  - platform: mqtt
    name: "Garaget"
    state_topic: "temp/garage"
    unit_of_measurement: '°C'

  - platform: mqtt
    name: "Vinkällaren"
    state_topic: "temp/vin"
    value_template: "{{  value | round(1) }}"
    unit_of_measurement: '°C'

  - platform: mqtt
    name: "Vinkylen"
    state_topic: "tele/the_bar/SENSOR"
    value_template: "{{ value_json.DS18x20.DS1.Temperature }}"
    unit_of_measurement: "°C"

  - platform: mqtt
    name: "Garageport norr"
    state_topic: "fromGarage/status"

  - platform: mqtt
    name: "Uterum temp"
    state_topic: "tele/outroom/SENSOR"
    value_template: "{{ value_json.AM2301.Temperature }}"
    unit_of_measurement: "°C"

  - platform: mqtt
    name: "Temp1"
    state_topic: "tele/tempsens/SENSOR"
    value_template: "{{ value_json.DS18x20.DS1.Temperature }}"
    unit_of_measurement: "°C"

  - platform: mqtt
    name: "Temp2"
    state_topic: "tele/tempsens/SENSOR"
    value_template: "{{ value_json.DS18x20.DS2.Temperature }}"
    unit_of_measurement: "°C"

  - platform: mqtt
    name: "Temp3"
    state_topic: "tele/tempsens2/SENSOR"
    value_template: "{{ value_json.DS18x20.DS1.Temperature }}"
    unit_of_measurement: "°C"

  - platform: mqtt
    name: "Temp4"
    state_topic: "tele/tempsens2/SENSOR"
    value_template: "{{ value_json.DS18x20.DS2.Temperature }}"
    unit_of_measurement: "°C"

#  - platform: mqtt     ## Sensor doesn't work! :(
#    name: "Uterum humid"
#    state_topic: "tele/outroom/SENSOR"
#    value_template: "{{ value_json.AM2301.Humidity }}"
#    unit_of_measurement: '%'

  - platform: uptime
    name: Online
    unit_of_measurement: hours

  - platform: history_stats
    name: Citrus belysningen
    entity_id: light.citrusbelysning
    state: 'on'
    type: time
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'

  - platform: darksky
    api_key: !secret darksky_api
    language: sv
    update_interval: "00:15"
    monitored_conditions:
      - summary
      - icon
      - temperature
      - humidity
      - precip_probability

  - platform: template
    sensors:
      phone_battery:
        friendly_name: 'Telefon batteri'
        value_template: '{{ states.device_tracker.bh9000mba2.attributes.battery | round(0) }}'
        unit_of_measurement: "%"
        entity_id:
         - device_tracker.bh9000mba2
      phone_altitude:
        friendly_name: 'Telefon altitud'
        value_template: '{{ states.device_tracker.bh9000mba2.attributes.altitude | round(0) }}'
        unit_of_measurement: "m"
        entity_id:
         - device_tracker.bh9000mba2

#
# Diskmaskinen
#
  - platform: mqtt
    name: "Diskmaskin idag"
    state_topic: "tele/dishwasher/SENSOR"
    value_template: '{{ value_json.ENERGY.Today }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "Diskmaskin igår"
    state_topic: "tele/dishwasher/SENSOR"
    value_template: '{{ value_json.ENERGY.Yesterday }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "Diskmaskin totalt"
    state_topic: "tele/dishwasher/SENSOR"
    value_template: '{{ value_json.ENERGY.Total }}'
    unit_of_measurement: "kWh"

  - platform: mqtt
    name: "Diskmaskin effekt"
    state_topic: "tele/dishwasher/SENSOR"
    value_template: '{{ value_json.ENERGY.Power }}'
    unit_of_measurement: "W"
  - platform: mqtt
    name: "Diskmaskin spänning"
    state_topic: "tele/dishwasher/SENSOR"
    value_template: '{{ value_json.ENERGY.Voltage }}'
    unit_of_measurement: "V"
  - platform: mqtt
    name: "Diskmaskin ström"
    state_topic: "tele/dishwasher/SENSOR"
    value_template: '{{ value_json.ENERGY.Current }}'
    unit_of_measurement: "A"

  - platform: template
    sensors:
      dishwasher_status:
        value_template: '{{ states.input_select.dishwasher_status.state}}'
        friendly_name: 'Diskmaskin Status'

#
# Elementen i annext
#
  - platform: mqtt
    name: "Effekt idag"
    state_topic: "tele/annexet/SENSOR"
    value_template: '{{ value_json.ENERGY.Today }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "Effekt igår"
    state_topic: "tele/annexet/SENSOR"
    value_template: '{{ value_json.ENERGY.Yesterday }}'
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "Effekt totalt"
    state_topic: "tele/annexet/SENSOR"
    value_template: '{{ value_json.ENERGY.Total }}'
    unit_of_measurement: "kWh"

  - platform: mqtt
    name: "Effekt nu"
    state_topic: "tele/annexet/SENSOR"
    value_template: '{{ value_json.ENERGY.Power }}'
    unit_of_measurement: "W"
  - platform: mqtt
    name: "Element spänning"
    state_topic: "tele/annexet/SENSOR"
    value_template: '{{ value_json.ENERGY.Voltage }}'
    unit_of_measurement: "V"
  - platform: mqtt
    name: "Element ström"
    state_topic: "tele/annexet/SENSOR"
    value_template: '{{ value_json.ENERGY.Current }}'
    unit_of_measurement: "A"

#
# Garageporten
#
  - platform: template
    sensors:
      garage_door_state:
        value_template: >- 
          {% if is_state('sensor.garageport_norr', 'open') %}
            Öppen
          {% else %}
            Stängd
          {% endif %}
        icon_template: >-
          {% if is_state('sensor.garageport_norr', 'open') %}
            mdi:garage-open
          {% else %}
            mdi:garage
          {% endif %}
        friendly_name: 'Garageport'

  - platform: template
    sensors:
      thomas63:
        value_template: '{{ (( as_timestamp(now()) - as_timestamp(strptime("1963-08-13", "%Y-%m-%d")) ) / 86400 ) | round(0) }}'
        entity_id: sensor.date
        friendly_name: 'Thomas'
        unit_of_measurement: "Dagar"
